name: Production Deployment Pipeline

on:
  push:
    branches: [main]

env:
  BACKEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app-backend
  FRONTEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app-frontend
  NODE_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app-node
  TAG: latest

jobs:
  build-push-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push backend
        run: |
          docker build -t $BACKEND_IMAGE:$TAG ./backend
          docker push $BACKEND_IMAGE:$TAG

  build-push-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push frontend
        run: |
          docker build --no-cache \
            --build-arg VITE_OPENAI_API_KEY=${{ secrets.FRONTEND_API_TOKEN }} \
            --build-arg VITE_NODE_API_URL=${{ secrets.VITE_NODE_API_URL }} \
            --build-arg VITE_LARAVEL_API_URL=${{ secrets.VITE_LARAVEL_API_URL }} \
            --build-arg VITE_NODE_WS_URL=${{ secrets.VITE_NODE_WS_URL}} \
            -t $FRONTEND_IMAGE:$TAG ./frontend
          docker push $FRONTEND_IMAGE:$TAG

  build-push-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push node
        run: |
          docker build \
            --build-arg OPENAI_API_KEY=${{ secrets.NODE_API_TOKEN }} \
            -t $NODE_IMAGE:$TAG ./node-server
          docker push $NODE_IMAGE:$TAG

  deploy:
    needs: [build-push-backend, build-push-frontend, build-push-node]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            if [ ! -d /var/www/fullstack-production ] || [ ! -d /var/www/fullstack-production/.git ]; then
              echo "Running initial server setup…"
              # (prereqs, SSH host key, docker install, etc.)
              sudo rm -rf /var/www/fullstack-production
              sudo mkdir -p /var/www/fullstack-production
              sudo chown $USER:$USER /var/www/fullstack-production
              git clone \
                https://x-access-token:${{ secrets.GH_PAT }}@github.com/Hussein-Abdallah0/CareerForgeAI.git \
                /var/www/fullstack-production
            fi
            # — now INSIDE /var/www/fullstack-production —
            cd /var/www/fullstack-production
            git pull origin main
            cat >.env <<EOF
            APP_NAME=Laravel
            APP_ENV=production
            APP_KEY=base64:7Xa46ucYC1rR55v1WSfDrSePxNpi6wQZzW9/rb5cMeI=
            APP_DEBUG=false
            APP_URL=https://your-domain.com

            DB_CONNECTION=mysql
            DB_HOST=mysql
            DB_PORT=3306
            DB_DATABASE=careerForgeDB
            DB_USERNAME=root
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}

            JWT_SECRET=${{ secrets.JWT_SECRET }}

            SESSION_DRIVER=database
            SESSION_LIFETIME=120
            # …and any other keys you need…
            EOF
            sudo docker compose down
            sudo docker compose pull
            sudo docker compose up -d
            sudo docker compose exec -T backend \
              composer install --no-interaction --prefer-dist --optimize-autoloader
            sudo docker compose exec -T backend \
              php artisan migrate --force
