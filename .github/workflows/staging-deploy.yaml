name: Staging Deployment Pipeline

on:
  push:
    branches: [staging]

env:
  BACKEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app-backend
  FRONTEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app-frontend
  NODE_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app-node
  TAG: staging

jobs:
  build-push-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push backend
        run: |
          docker build -t $BACKEND_IMAGE:$TAG ./backend
          docker push $BACKEND_IMAGE:$TAG

  build-push-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push frontend
        run: |
          docker build \
            --build-arg VITE_OPENAI_API_KEY=${{ secrets.FRONTEND_API_TOKEN }} \
            -t $FRONTEND_IMAGE:$TAG ./frontend
          docker push $FRONTEND_IMAGE:$TAG

  build-push-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push node
        run: |
          docker build \
            --build-arg OPENAI_API_KEY=${{ secrets.NODE_API_TOKEN }} \
            -t $NODE_IMAGE:$TAG ./node-server
          docker push $NODE_IMAGE:$TAG

  deploy:
    needs: [build-push-backend, build-push-frontend, build-push-node]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to staging
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Bootstrap (run once)
            if [ ! -d /var/www/fullstack-staging/.git ]; then
              echo "Running initial server setupâ€¦"

              # Install prerequisites
              sudo apt-get update
              sudo apt-get install -y git curl software-properties-common

              # Trust GitHub host key
              mkdir -p ~/.ssh
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              chmod 600 ~/.ssh/known_hosts

              # Clean up and clone the setup repo
              sudo rm -rf /tmp/setup
              git clone --branch staging git@github.com:Hussein-Abdallah0/CareerForgeAI.git /tmp/setup

              # Run your install script (Docker & Docker-Compose)
              sudo bash /tmp/setup/server-setup.sh

              # **Prepare the webroot folder with correct ownership**
              sudo mkdir -p /var/www/fullstack-staging
              sudo chown $USER:$USER /var/www/fullstack-staging

              # Clone *your app* there as ubuntu (no sudo)
              git clone --branch staging git@github.com:Hussein-Abdallah0/CareerForgeAI.git /var/www/fullstack-staging
            fi

            # Regular deployment 
            cd /var/www/fullstack-staging
            git pull origin staging

            cat >/var/www/fullstack-staging/.env <<EOF
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            EOF

            sudo docker-compose down
            sudo docker-compose pull
            sudo docker-compose up -d

            sudo docker-compose exec -T backend php artisan migrate --force
