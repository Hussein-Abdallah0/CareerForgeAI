name: Staging Deployment Pipeline

on:
  push:
    branches: [staging]

env:
  BACKEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app-backend
  FRONTEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app-frontend
  NODE_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app-node
  TAG: staging

jobs:
  build-push-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push backend
        run: |
          docker build -t $BACKEND_IMAGE:$TAG ./backend
          docker push $BACKEND_IMAGE:$TAG

  build-push-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push frontend
        run: |
          docker build --no-cache \
            --build-arg VITE_OPENAI_API_KEY=${{ secrets.FRONTEND_API_TOKEN }} \
            --build-arg VITE_NODE_API_URL=${{ secrets.VITE_NODE_API_URL }} \
            --build-arg VITE_LARAVEL_API_URL=${{ secrets.VITE_LARAVEL_API_URL }} \
            --build-arg VITE_NODE_WS_URL=${{ secrets.VITE_NODE_WS_URL}} \
            -t $FRONTEND_IMAGE:$TAG ./frontend
          docker push $FRONTEND_IMAGE:$TAG

  build-push-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push node
        run: |
          docker build \
            --build-arg OPENAI_API_KEY=${{ secrets.NODE_API_TOKEN }} \
            -t $NODE_IMAGE:$TAG ./node-server
          docker push $NODE_IMAGE:$TAG

  deploy:
    needs: [build-push-backend, build-push-frontend, build-push-node]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to staging
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euo pipefail
            cd /var/www/fullstack-staging

            # Create environment file with all variables
            sudo tee .env <<EOF
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            BACKEND_IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app-backend
            FRONTEND_IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app-frontend
            NODE_IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/laravel-app-node
            TAG=staging
            NODE_API_TOKEN=${{ secrets.NODE_API_TOKEN }}
            # Add MySQL variables
            MYSQL_ROOT_PASSWORD=${{ secrets.DB_PASSWORD }}
            MYSQL_DATABASE=careerForgeDB
            EOF

            # Graceful shutdown with timeout
            sudo docker-compose down --timeout 30

            # Pull new images with cleanup
            sudo docker-compose pull

            # Start services with resource limits
            sudo docker-compose up -d \
              --scale backend=2 \
              --scale nodejs=2 \
              --no-recreate

            # Wait for MySQL readiness
            sudo docker-compose exec -T mysql bash -c 'while ! mysqladmin ping -uroot -p"$$MYSQL_ROOT_PASSWORD" --silent; do sleep 2; done'

            # Run migrations
            sudo docker-compose exec -T backend php artisan migrate --force

            # Cleanup old images
            sudo docker image prune -af
